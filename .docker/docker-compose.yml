version: '3.7'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  db-data: {}

services:
  db:
    # In production, you may want to use a managed database service
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=api-platform
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=!ChangeMe!
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    networks: ['backend']

  nginx:
    image: php-docker-tutorial/nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      backend:
        aliases:
          - ${APP_HOST}

  php-fpm:
    image: php-docker-tutorial/php-fpm
    build:
      context: .
      dockerfile: ./php-fpm/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      - backend

  workspace:
    build:
      context: .
      dockerfile: ./workspace/Dockerfile
      args:
        - APP_CODE_PATH=${APP_CODE_PATH_CONTAINER}
        - APP_GROUP=${APP_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${APP_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    networks:
      - backend

  node:
    build:
      context: .
      dockerfile: ./node/Dockerfile
      args:
        - APP_CODE_PATH=${NODE_CODE_PATH_CONTAINER}
        - APP_GROUP=${NODE_GROUP}
        - APP_GROUP_ID=${APP_GROUP_ID}
        - APP_USER=${NODE_USER}
        - APP_USER_ID=${APP_USER_ID}
        - TARGET_PHP_VERSION=${PHP_VERSION}
        - TZ=${TIMEZONE}
    volumes:
      - ${NODE_CODE_PATH_HOST}:${NODE_CODE_PATH_CONTAINER}
    networks:
      - backend
    ports:
      - "${NODE_HOST_HTTP_PORT}:8080"
    command: 'npm run serve'
